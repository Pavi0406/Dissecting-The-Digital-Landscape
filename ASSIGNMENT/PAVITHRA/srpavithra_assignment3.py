# -*- coding: utf-8 -*-
"""srpavithra_assignment3.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N-fZafluKSkE7ahGYUQoCY9_NfY4N86T

# **ASSIGNMENT** **1**   (**ADS**)
"""

import numpy as  np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from scipy import stats
from sklearn import metrics
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.svm import SVR
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error

"""# ***LOADING***  ***DATASET***"""

from google.colab import files
df=files.upload()

df=pd.read_csv("House.csv")
df

df.info()

df.shape

df.dtypes

"""# *** VISUALIUZATION***

## ***  UNIVARIATE ANALYSIS***
"""

df.describe()

"""***HISTOGRAM***"""

sns.histplot(x='Date', data=df)



"""***BOXPLOT***"""

sns.boxplot(df['number of bedrooms'])

sns.boxplot(data=df.loc[:, ['number of bathrooms', 'number of floors']])

sns.boxplot(data=df.loc[:, ['Number of schools nearby', 'Distance from the airport']])

"""***VIOLIN PLOT***"""

sns.violinplot(x=df["living area"],palette='rainbow')

"""***STRIP PLOTS***"""

sns.stripplot(x=df["lot area"])

"""## *** BIVARIATE ANALYSIS***

***CORRELATION*** ***COEFFICIENTS***
"""

df.corr()



"""***REGRESSION*** ***ANALYSIS***"""

X = df.iloc[:, 0].values.reshape(-1, 1)
Y = df.iloc[:, 1].values.reshape(-1, 1)
linear_regressor = LinearRegression()
linear_regressor.fit(X, Y)
Y_pred = linear_regressor.predict(X)

plt.scatter(X, Y)
plt.plot(X, Y_pred, color='yellow')
plt.show()

"""***SCATTER*** ***PLOTS***"""

df

data={'number of bedrooms ':[ 5,4,5,4,3,2,3,2,4,3],
      'number of bathrooms':[2.50,2.50,2.75,2.50,2.00,1.50,2.00,1.00,1.00,1.00]}
data

df.plot.scatter(x = 'number of bedrooms', y = 'number of bathrooms', s = 100,c = 'red')

"""# ***  MULTIVARIATE*** ***ANALYSIS***

***CLUSTER ANALYSIS***
"""



"""***COUNT PLOT***"""

sns.countplot(x='Date',data=df)
plt.show()

"""#  *** DESCRIPTIVE STATISTICS ON DATASET***"""

df.sum()

df.mean()

df.std()

df[0 :11].count()

df['Postal Code'].median()

df ["living area" ].max()

df['Lattitude'].abs()

s1 = pd.Series(np.random.randn(10))
s2 = pd.Series(np.random.randn(10))
s1.cov(s2)

"""# *** HANDLING MISSING DATA***"""

df['Date'].isnull()

df.isna()

df.fillna(0)

df.dropna()

df.fillna(method ='bfill')